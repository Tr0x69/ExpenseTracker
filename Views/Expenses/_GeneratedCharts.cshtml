@model ChartViewModel

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<div id="SummaryTables">
    <partial name="_SummaryTables" model="Model" />
</div>

<div id="cdnCharts">
    <div>
        <canvas id="barChart" width="100" height="50"></canvas>
    </div>
    <div>
        <canvas id="donutChart" width="100" height="50"></canvas>
    </div>
    <script>

        var color = ['rgb(255, 99, 132)',
                    'rgb(54, 162, 235)',
                    'rgb(255, 205, 86)',
                    'rgb(75, 192, 192)',
                    'rgb(153, 102, 255)',
                    'rgb(255, 159, 64)',
                    'rgb(201, 203, 207)',
                    'rgb(255, 87, 34)',
                    'rgb(139, 195, 74)',
                    'rgb(233, 30, 99)'];

        var label = @Model.ChartExpenseList.Count()
        var ctx = document.getElementById('barChart').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.ChartExpenseList.Select(s => s.name))),
                datasets: [{
                    label: 'Total by Category',
                    data: @Html.Raw(Json.Serialize(Model.ChartExpenseList.Select(s => s.amount))),
                    backgroundColor: color,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });



        var ctx = document.getElementById('donutChart').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.ChartExpenseList.Select(s => s.name))),
                datasets: [{
                        label: 'Total by Category',
                    data: @Html.Raw(Json.Serialize(Model.ChartExpenseList.Select(s => s.amount))),
                    backgroundColor: color,
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
</div>